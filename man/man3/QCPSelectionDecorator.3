.TH "QCPSelectionDecorator" 3 "Wed Mar 15 2023" "OmronPID" \" -*- nroff -*-
.ad l
.nh
.SH NAME
QCPSelectionDecorator \- Controls how a plottable's data selection is drawn\&.  

.SH SYNOPSIS
.br
.PP
.PP
Inherited by \fBQCPSelectionDecoratorBracket\fP\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBQCPSelectionDecorator\fP ()"
.br
.ti -1c
.RI "QPen \fBpen\fP () const"
.br
.ti -1c
.RI "QBrush \fBbrush\fP () const"
.br
.ti -1c
.RI "\fBQCPScatterStyle\fP \fBscatterStyle\fP () const"
.br
.ti -1c
.RI "QCPScatterStyle::ScatterProperties \fBusedScatterProperties\fP () const"
.br
.ti -1c
.RI "void \fBsetPen\fP (const QPen &pen)"
.br
.ti -1c
.RI "void \fBsetBrush\fP (const QBrush &brush)"
.br
.ti -1c
.RI "void \fBsetScatterStyle\fP (const \fBQCPScatterStyle\fP &scatterStyle, QCPScatterStyle::ScatterProperties usedProperties=\fBQCPScatterStyle::spPen\fP)"
.br
.ti -1c
.RI "void \fBsetUsedScatterProperties\fP (const QCPScatterStyle::ScatterProperties &properties)"
.br
.ti -1c
.RI "void \fBapplyPen\fP (\fBQCPPainter\fP *painter) const"
.br
.ti -1c
.RI "void \fBapplyBrush\fP (\fBQCPPainter\fP *painter) const"
.br
.ti -1c
.RI "\fBQCPScatterStyle\fP \fBgetFinalScatterStyle\fP (const \fBQCPScatterStyle\fP &unselectedStyle) const"
.br
.ti -1c
.RI "virtual void \fBcopyFrom\fP (const \fBQCPSelectionDecorator\fP *other)"
.br
.ti -1c
.RI "virtual void \fBdrawDecoration\fP (\fBQCPPainter\fP *painter, \fBQCPDataSelection\fP selection)"
.br
.in -1c
.SS "Protected Member Functions"

.in +1c
.ti -1c
.RI "virtual bool \fBregisterWithPlottable\fP (\fBQCPAbstractPlottable\fP *plottable)"
.br
.in -1c
.SS "Protected Attributes"

.in +1c
.ti -1c
.RI "QPen \fBmPen\fP"
.br
.ti -1c
.RI "QBrush \fBmBrush\fP"
.br
.ti -1c
.RI "\fBQCPScatterStyle\fP \fBmScatterStyle\fP"
.br
.ti -1c
.RI "QCPScatterStyle::ScatterProperties \fBmUsedScatterProperties\fP"
.br
.ti -1c
.RI "\fBQCPAbstractPlottable\fP * \fBmPlottable\fP"
.br
.in -1c
.SS "Friends"

.in +1c
.ti -1c
.RI "class \fBQCPAbstractPlottable\fP"
.br
.in -1c
.SH "Detailed Description"
.PP 
Controls how a plottable's data selection is drawn\&. 

Each \fBQCPAbstractPlottable\fP instance has one \fBQCPSelectionDecorator\fP (accessible via \fBQCPAbstractPlottable::selectionDecorator\fP) and uses it when drawing selected segments of its data\&.
.PP
The selection decorator controls both pen (\fBsetPen\fP) and brush (\fBsetBrush\fP), as well as the scatter style (\fBsetScatterStyle\fP) if the plottable draws scatters\&. Since a \fBQCPScatterStyle\fP is itself composed of different properties such as color shape and size, the decorator allows specifying exactly which of those properties shall be used for the selected data point, via \fBsetUsedScatterProperties\fP\&.
.PP
A \fBQCPSelectionDecorator\fP subclass instance can be passed to a plottable via \fBQCPAbstractPlottable::setSelectionDecorator\fP, allowing greater customizability of the appearance of selected segments\&.
.PP
Use \fBcopyFrom\fP to easily transfer the settings of one decorator to another one\&. This is especially useful since plottables take ownership of the passed selection decorator, and thus the same decorator instance can not be passed to multiple plottables\&.
.PP
Selection decorators can also themselves perform drawing operations by reimplementing \fBdrawDecoration\fP, which is called by the plottable's draw method\&. The base class \fBQCPSelectionDecorator\fP does not make use of this however\&. For example, \fBQCPSelectionDecoratorBracket\fP draws brackets around selected data segments\&. 
.PP
Definition at line \fB3240\fP of file \fBqcustomplot\&.h\fP\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "QCPSelectionDecorator::QCPSelectionDecorator ()"
Creates a new \fBQCPSelectionDecorator\fP instance with default values 
.PP
Definition at line \fB10331\fP of file \fBqcustomplot\&.cpp\fP\&.
.SS "QCPSelectionDecorator::~QCPSelectionDecorator ()\fC [virtual]\fP"

.PP
Definition at line \fB10340\fP of file \fBqcustomplot\&.cpp\fP\&.
.SH "Member Function Documentation"
.PP 
.SS "void QCPSelectionDecorator::applyBrush (\fBQCPPainter\fP * painter) const"
Sets the brush of \fIpainter\fP to the brush of this selection decorator\&.
.PP
\fBSee also\fP
.RS 4
\fBapplyPen\fP, \fBgetFinalScatterStyle\fP 
.RE
.PP

.PP
Definition at line \fB10400\fP of file \fBqcustomplot\&.cpp\fP\&.
.SS "void QCPSelectionDecorator::applyPen (\fBQCPPainter\fP * painter) const"
Sets the pen of \fIpainter\fP to the pen of this selection decorator\&.
.PP
\fBSee also\fP
.RS 4
\fBapplyBrush\fP, \fBgetFinalScatterStyle\fP 
.RE
.PP

.PP
Definition at line \fB10390\fP of file \fBqcustomplot\&.cpp\fP\&.
.SS "QBrush QCPSelectionDecorator::brush () const\fC [inline]\fP"

.PP
Definition at line \fB3249\fP of file \fBqcustomplot\&.h\fP\&.
.SS "void QCPSelectionDecorator::copyFrom (const \fBQCPSelectionDecorator\fP * other)\fC [virtual]\fP"
Copies all properties (e\&.g\&. color, fill, scatter style) of the \fIother\fP selection decorator to this selection decorator\&. 
.PP
Definition at line \fB10431\fP of file \fBqcustomplot\&.cpp\fP\&.
.SS "void QCPSelectionDecorator::drawDecoration (\fBQCPPainter\fP * painter, \fBQCPDataSelection\fP selection)\fC [virtual]\fP"
This method is called by all plottables' draw methods to allow custom selection decorations to be drawn\&. Use the passed \fIpainter\fP to perform the drawing operations\&. \fIselection\fP carries the data selection for which the decoration shall be drawn\&.
.PP
The default base class implementation of \fBQCPSelectionDecorator\fP has no special decoration, so this method does nothing\&. 
.PP
Reimplemented in \fBQCPSelectionDecoratorBracket\fP\&.
.PP
Definition at line \fB10446\fP of file \fBqcustomplot\&.cpp\fP\&.
.SS "\fBQCPScatterStyle\fP QCPSelectionDecorator::getFinalScatterStyle (const \fBQCPScatterStyle\fP & unselectedStyle) const"
Returns the scatter style that the parent plottable shall use for selected scatter points\&. The plottable's original (unselected) scatter style must be passed as \fIunselectedStyle\fP\&. Depending on the setting of \fBsetUsedScatterProperties\fP, the returned scatter style is a mixture of this selecion decorator's scatter style (\fBsetScatterStyle\fP), and \fIunselectedStyle\fP\&.
.PP
\fBSee also\fP
.RS 4
\fBapplyPen\fP, \fBapplyBrush\fP, \fBsetScatterStyle\fP 
.RE
.PP

.PP
Definition at line \fB10413\fP of file \fBqcustomplot\&.cpp\fP\&.
.SS "QPen QCPSelectionDecorator::pen () const\fC [inline]\fP"

.PP
Definition at line \fB3248\fP of file \fBqcustomplot\&.h\fP\&.
.SS "bool QCPSelectionDecorator::registerWithPlottable (\fBQCPAbstractPlottable\fP * plottable)\fC [protected]\fP, \fC [virtual]\fP"

.PP
Definition at line \fB10461\fP of file \fBqcustomplot\&.cpp\fP\&.
.SS "\fBQCPScatterStyle\fP QCPSelectionDecorator::scatterStyle () const\fC [inline]\fP"

.PP
Definition at line \fB3250\fP of file \fBqcustomplot\&.h\fP\&.
.SS "void QCPSelectionDecorator::setBrush (const QBrush & brush)"
Sets the brush that will be used by the parent plottable to draw selected data segments\&. 
.PP
Definition at line \fB10355\fP of file \fBqcustomplot\&.cpp\fP\&.
.SS "void QCPSelectionDecorator::setPen (const QPen & pen)"
Sets the pen that will be used by the parent plottable to draw selected data segments\&. 
.PP
Definition at line \fB10347\fP of file \fBqcustomplot\&.cpp\fP\&.
.SS "void QCPSelectionDecorator::setScatterStyle (const \fBQCPScatterStyle\fP & scatterStyle, QCPScatterStyle::ScatterProperties usedProperties = \fC\fBQCPScatterStyle::spPen\fP\fP)"
Sets the scatter style that will be used by the parent plottable to draw scatters in selected data segments\&.
.PP
\fIusedProperties\fP specifies which parts of the passed \fIscatterStyle\fP will be used by the plottable\&. The used properties can also be changed via \fBsetUsedScatterProperties\fP\&. 
.PP
Definition at line \fB10367\fP of file \fBqcustomplot\&.cpp\fP\&.
.SS "void QCPSelectionDecorator::setUsedScatterProperties (const QCPScatterStyle::ScatterProperties & properties)"
Use this method to define which properties of the scatter style (set via \fBsetScatterStyle\fP) will be used for selected data segments\&. All properties of the scatter style that are not specified in \fIproperties\fP will remain as specified in the plottable's original scatter style\&.
.PP
\fBSee also\fP
.RS 4
\fBQCPScatterStyle::ScatterProperty\fP 
.RE
.PP

.PP
Definition at line \fB10380\fP of file \fBqcustomplot\&.cpp\fP\&.
.SS "QCPScatterStyle::ScatterProperties QCPSelectionDecorator::usedScatterProperties () const\fC [inline]\fP"

.PP
Definition at line \fB3251\fP of file \fBqcustomplot\&.h\fP\&.
.SH "Friends And Related Function Documentation"
.PP 
.SS "friend class \fBQCPAbstractPlottable\fP\fC [friend]\fP"

.PP
Definition at line \fB3282\fP of file \fBqcustomplot\&.h\fP\&.
.SH "Member Data Documentation"
.PP 
.SS "QBrush QCPSelectionDecorator::mBrush\fC [protected]\fP"

.PP
Definition at line \fB3271\fP of file \fBqcustomplot\&.h\fP\&.
.SS "QPen QCPSelectionDecorator::mPen\fC [protected]\fP"

.PP
Definition at line \fB3270\fP of file \fBqcustomplot\&.h\fP\&.
.SS "\fBQCPAbstractPlottable\fP* QCPSelectionDecorator::mPlottable\fC [protected]\fP"

.PP
Definition at line \fB3275\fP of file \fBqcustomplot\&.h\fP\&.
.SS "\fBQCPScatterStyle\fP QCPSelectionDecorator::mScatterStyle\fC [protected]\fP"

.PP
Definition at line \fB3272\fP of file \fBqcustomplot\&.h\fP\&.
.SS "QCPScatterStyle::ScatterProperties QCPSelectionDecorator::mUsedScatterProperties\fC [protected]\fP"

.PP
Definition at line \fB3273\fP of file \fBqcustomplot\&.h\fP\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for OmronPID from the source code\&.
