.TH "QCPDataRange" 3 "Wed Mar 15 2023" "OmronPID" \" -*- nroff -*-
.ad l
.nh
.SH NAME
QCPDataRange \- Describes a data range given by begin and end index\&.  

.SH SYNOPSIS
.br
.PP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBQCPDataRange\fP ()"
.br
.ti -1c
.RI "\fBQCPDataRange\fP (int begin, int end)"
.br
.ti -1c
.RI "bool \fBoperator==\fP (const \fBQCPDataRange\fP &other) const"
.br
.ti -1c
.RI "bool \fBoperator!=\fP (const \fBQCPDataRange\fP &other) const"
.br
.ti -1c
.RI "int \fBbegin\fP () const"
.br
.ti -1c
.RI "int \fBend\fP () const"
.br
.ti -1c
.RI "int \fBsize\fP () const"
.br
.ti -1c
.RI "int \fBlength\fP () const"
.br
.ti -1c
.RI "void \fBsetBegin\fP (int begin)"
.br
.ti -1c
.RI "void \fBsetEnd\fP (int end)"
.br
.ti -1c
.RI "bool \fBisValid\fP () const"
.br
.ti -1c
.RI "bool \fBisEmpty\fP () const"
.br
.ti -1c
.RI "\fBQCPDataRange\fP \fBbounded\fP (const \fBQCPDataRange\fP &other) const"
.br
.ti -1c
.RI "\fBQCPDataRange\fP \fBexpanded\fP (const \fBQCPDataRange\fP &other) const"
.br
.ti -1c
.RI "\fBQCPDataRange\fP \fBintersection\fP (const \fBQCPDataRange\fP &other) const"
.br
.ti -1c
.RI "\fBQCPDataRange\fP \fBadjusted\fP (int changeBegin, int changeEnd) const"
.br
.ti -1c
.RI "bool \fBintersects\fP (const \fBQCPDataRange\fP &other) const"
.br
.ti -1c
.RI "bool \fBcontains\fP (const \fBQCPDataRange\fP &other) const"
.br
.in -1c
.SS "Related Functions"
(Note that these are not member functions\&.) 
.in +1c
.ti -1c
.RI "QDebug \fBoperator<<\fP (QDebug d, const \fBQCPDataRange\fP &dataRange)"
.br
.in -1c
.SH "Detailed Description"
.PP 
Describes a data range given by begin and end index\&. 

\fBQCPDataRange\fP holds two integers describing the begin (\fBsetBegin\fP) and end (\fBsetEnd\fP) index of a contiguous set of data points\&. The end index points to the data point above the last data point that's part of the data range, similarly to the nomenclature used in standard iterators\&.
.PP
Data Ranges are not bound to a certain plottable, thus they can be freely exchanged, created and modified\&. If a non-contiguous data set shall be described, the class \fBQCPDataSelection\fP is used, which holds and manages multiple instances of \fBQCPDataRange\fP\&. In most situations, \fBQCPDataSelection\fP is thus used\&.
.PP
Both \fBQCPDataRange\fP and \fBQCPDataSelection\fP offer convenience methods to work with them, e\&.g\&. \fBbounded\fP, \fBexpanded\fP, \fBintersects\fP, \fBintersection\fP, \fBadjusted\fP, \fBcontains\fP\&. Further, addition and subtraction operators (defined in \fBQCPDataSelection\fP) can be used to join/subtract data ranges and data selections (or mixtures), to retrieve a corresponding \fBQCPDataSelection\fP\&.
.PP
QCustomPlot's \fBdata selection mechanism\fP is based on \fBQCPDataSelection\fP and \fBQCPDataRange\fP\&.
.PP
\fBNote\fP
.RS 4
Do not confuse \fBQCPDataRange\fP with \fBQCPRange\fP\&. A \fBQCPRange\fP describes an interval in floating point plot coordinates, e\&.g\&. the current axis range\&. 
.RE
.PP

.PP
Definition at line \fB890\fP of file \fBqcustomplot\&.h\fP\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "QCPDataRange::QCPDataRange ()"
Creates an empty \fBQCPDataRange\fP, with begin and end set to 0\&. 
.PP
Definition at line \fB2225\fP of file \fBqcustomplot\&.cpp\fP\&.
.SS "QCPDataRange::QCPDataRange (int begin, int end)"
Creates a \fBQCPDataRange\fP, initialized with the specified \fIbegin\fP and \fIend\fP\&.
.PP
No checks or corrections are made to ensure the resulting range is valid (\fBisValid\fP)\&. 
.PP
Definition at line \fB2236\fP of file \fBqcustomplot\&.cpp\fP\&.
.SH "Member Function Documentation"
.PP 
.SS "\fBQCPDataRange\fP QCPDataRange::adjusted (int changeBegin, int changeEnd) const\fC [inline]\fP"
Returns a data range where \fIchangeBegin\fP and \fIchangeEnd\fP were added to the begin and end indices, respectively\&. 
.PP
Definition at line \fB915\fP of file \fBqcustomplot\&.h\fP\&.
.SS "int QCPDataRange::begin () const\fC [inline]\fP"

.PP
Definition at line \fB900\fP of file \fBqcustomplot\&.h\fP\&.
.SS "\fBQCPDataRange\fP QCPDataRange::bounded (const \fBQCPDataRange\fP & other) const"
Returns a data range that matches this data range, except that parts exceeding \fIother\fP are excluded\&.
.PP
This method is very similar to \fBintersection\fP, with one distinction: If this range and the \fIother\fP range share no intersection, the returned data range will be empty with begin and end set to the respective boundary side of \fIother\fP, at which this range is residing\&. (\fBintersection\fP would just return a range with begin and end set to 0\&.) 
.PP
Definition at line \fB2251\fP of file \fBqcustomplot\&.cpp\fP\&.
.SS "bool QCPDataRange::contains (const \fBQCPDataRange\fP & other) const"
Returns whether all data points described by this data range are also in \fIother\fP\&.
.PP
\fBSee also\fP
.RS 4
\fBintersects\fP 
.RE
.PP

.PP
Definition at line \fB2307\fP of file \fBqcustomplot\&.cpp\fP\&.
.SS "int QCPDataRange::end () const\fC [inline]\fP"

.PP
Definition at line \fB901\fP of file \fBqcustomplot\&.h\fP\&.
.SS "\fBQCPDataRange\fP QCPDataRange::expanded (const \fBQCPDataRange\fP & other) const"
Returns a data range that contains both this data range as well as \fIother\fP\&. 
.PP
Definition at line \fB2267\fP of file \fBqcustomplot\&.cpp\fP\&.
.SS "\fBQCPDataRange\fP QCPDataRange::intersection (const \fBQCPDataRange\fP & other) const"
Returns the data range which is contained in both this data range and \fIother\fP\&.
.PP
This method is very similar to \fBbounded\fP, with one distinction: If this range and the \fIother\fP range share no intersection, the returned data range will be empty with begin and end set to 0\&. (\fBbounded\fP would return a range with begin and end set to one of the boundaries of \fIother\fP, depending on which side this range is on\&.)
.PP
\fBSee also\fP
.RS 4
\fBQCPDataSelection::intersection\fP 
.RE
.PP

.PP
Definition at line \fB2282\fP of file \fBqcustomplot\&.cpp\fP\&.
.SS "bool QCPDataRange::intersects (const \fBQCPDataRange\fP & other) const"
Returns whether this data range and \fIother\fP share common data points\&.
.PP
\fBSee also\fP
.RS 4
\fBintersection\fP, \fBcontains\fP 
.RE
.PP

.PP
Definition at line \fB2296\fP of file \fBqcustomplot\&.cpp\fP\&.
.SS "bool QCPDataRange::isEmpty () const\fC [inline]\fP"
Returns whether this range is empty, i\&.e\&. whether its begin index equals its end index\&.
.PP
\fBSee also\fP
.RS 4
\fBsize\fP, \fBlength\fP 
.RE
.PP

.PP
Definition at line \fB911\fP of file \fBqcustomplot\&.h\fP\&.
.SS "bool QCPDataRange::isValid () const\fC [inline]\fP"
Returns whether this range is valid\&. A valid range has a begin index greater or equal to 0, and an end index greater or equal to the begin index\&.
.PP
\fBNote\fP
.RS 4
Invalid ranges should be avoided and are never the result of any of \fBQCustomPlot\fP's methods (unless they are themselves fed with invalid ranges)\&. Do not pass invalid ranges to \fBQCustomPlot\fP's methods\&. The invalid range is not inherently prevented in \fBQCPDataRange\fP, to allow temporary invalid begin/end values while manipulating the range\&. An invalid range is not necessarily empty (\fBisEmpty\fP), since its \fBlength\fP can be negative and thus non-zero\&. 
.RE
.PP

.PP
Definition at line \fB910\fP of file \fBqcustomplot\&.h\fP\&.
.SS "int QCPDataRange::length () const\fC [inline]\fP"
Returns the number of data points described by this data range\&. Equivalent to \fBsize\fP\&. 
.PP
Definition at line \fB903\fP of file \fBqcustomplot\&.h\fP\&.
.SS "bool QCPDataRange::operator!= (const \fBQCPDataRange\fP & other) const\fC [inline]\fP"

.PP
Definition at line \fB897\fP of file \fBqcustomplot\&.h\fP\&.
.SS "bool QCPDataRange::operator== (const \fBQCPDataRange\fP & other) const\fC [inline]\fP"

.PP
Definition at line \fB896\fP of file \fBqcustomplot\&.h\fP\&.
.SS "void QCPDataRange::setBegin (int begin)\fC [inline]\fP"
Sets the begin of this data range\&. The \fIbegin\fP index points to the first data point that is part of the data range\&.
.PP
No checks or corrections are made to ensure the resulting range is valid (\fBisValid\fP)\&.
.PP
\fBSee also\fP
.RS 4
\fBsetEnd\fP 
.RE
.PP

.PP
Definition at line \fB906\fP of file \fBqcustomplot\&.h\fP\&.
.SS "void QCPDataRange::setEnd (int end)\fC [inline]\fP"
Sets the end of this data range\&. The \fIend\fP index points to the data point just above the last data point that is part of the data range\&.
.PP
No checks or corrections are made to ensure the resulting range is valid (\fBisValid\fP)\&.
.PP
\fBSee also\fP
.RS 4
\fBsetBegin\fP 
.RE
.PP

.PP
Definition at line \fB907\fP of file \fBqcustomplot\&.h\fP\&.
.SS "int QCPDataRange::size () const\fC [inline]\fP"
Returns the number of data points described by this data range\&. This is equal to the end index minus the begin index\&.
.PP
\fBSee also\fP
.RS 4
\fBlength\fP 
.RE
.PP

.PP
Definition at line \fB902\fP of file \fBqcustomplot\&.h\fP\&.
.SH "Friends And Related Function Documentation"
.PP 
.SS "QDebug operator<< (QDebug d, const \fBQCPDataRange\fP & dataRange)\fC [related]\fP"
Prints \fIdataRange\fP in a human readable format to the qDebug output\&. 
.PP
Definition at line \fB1063\fP of file \fBqcustomplot\&.h\fP\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for OmronPID from the source code\&.
